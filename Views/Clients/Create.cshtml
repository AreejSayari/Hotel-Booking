@model tuto.Models.Client

@{
    ViewData["Title"] = "Create";
}

<h1>Create Account - Client</h1>

<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-row">
        @Html.ValidationSummary(true)

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Firstname, new { @class = "control-label" })
            <div class="input-group">
                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Lastname, new { @class = "control-label" })
            <div class="input-group">
                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Email, new { @class = "control-label" })
            <div class="input-group">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(model => model.Password, new { @class = "control-label" })
            <div class="input-group">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <br>
        <div class="form-group col-md-12">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
}




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
